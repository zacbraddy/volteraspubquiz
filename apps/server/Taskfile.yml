version: '3'

vars:
  GREETING: Hello, World!

tasks:
  bootstrap:
    cmds:
      - poetry env use python3.11
      - pip install --upgrade pip setuptools wheel
      - poetry install

  dev:
    cmds:
      - poetry env use python3.11
      - docker-compose up -d --remove-orphans
      - echo "Starting PostgreSQL container..."
      - |
        echo "Waiting for PostgreSQL to be ready..."
        max_attempts=30
        attempt=0
        while [ $attempt -lt $max_attempts ]; do
          container_id=$(docker-compose ps -q postgres)
          if [ -z "$container_id" ]; then
            echo "PostgreSQL container not found!"
            docker-compose down --remove-orphans
            exit 1
          fi
          if docker exec $container_id pg_isready -U postgres -h localhost; then
            echo "PostgreSQL is ready!"
            break
          fi
          attempt=$((attempt+1))
          echo "Waiting for PostgreSQL to be ready... Attempt $attempt/$max_attempts"
          sleep 1
        done
        if [ $attempt -eq $max_attempts ]; then
          echo "PostgreSQL did not become ready in time. Exiting."
          docker-compose down --remove-orphans
          exit 1
        fi
      - >
        trap 'echo "Stopping PostgreSQL container..."; docker-compose down --remove-orphans' EXIT;
        PYTHONPATH=$PYTHONPATH:$(pwd)/src
        poetry run fastapi dev src/main.py

  lint:
    cmds:
      - poetry env use python3.11
      - poetry run isort ./**/*.py
      - poetry run black ./**/*.py
      - poetry run flake8 ./**/*.py

  test:
    cmds:
      - poetry env use python3.11
      - PYTHONPATH=$PYTHONPATH:$(pwd)/src poetry run pytest tests/ -v
